mloop_version='3.3.4'
archive_type='controller'
num_out_params=94
out_params=[array([ 6.5051467 , 14.96949419]), array([15.10823674, 11.72347432]), array([13.48915224, 14.1239142 ]), array([14.07350178, 11.08171925]), array([17.27177671, 10.65615994]), array([ 7.73450587, 16.57219137]), array([18.36258581, 13.05380512]), array([2.99409403, 4.49465191]), array([10.06697364, 12.72920498]), array([6.07677843, 7.78176904]), array([16.45204368, 18.69238515]), array([20., 20.]), array([20., 20.]), array([20.       , 15.4892059]), array([12.04594856, 19.15833541]), array([15.52632181, 19.81478093]), array([14.4874096, 20.       ]), array([14.03373037, 17.89526876]), array([16.15986029, 18.06264578]), array([14.88180996, 15.92506628]), array([16.10068206, 17.0450295 ]), array([15.54046687, 16.91981774]), array([3.14697834, 4.97182669]), array([20.        , 12.43879253]), array([18.88539378, 12.76074424]), array([20.        , 12.95901727]), array([ 8.90717243, 12.63101703]), array([13.42557649, 16.72621041]), array([13.06457251, 16.99546293]), array([14.3619571 , 17.58766856]), array([ 5.26234147, 18.73086257]), array([12.66310116, 16.08235389]), array([17.07856867, 19.61033281]), array([20.        , 11.47746174]), array([19.86285522,  7.05312204]), array([7.35590864, 8.90112417]), array([7.83816481, 8.95537924]), array([6.32247056, 8.37589596]), array([16.00748487,  2.2957297 ]), array([16.89226323, 13.23184153]), array([13.12343659, 16.86374032]), array([11.12502113, 16.91065374]), array([10.5663329 , 16.70376358]), array([10.23858417, 16.34595461]), array([10.90738185, 16.88113574]), array([10.60775189, 16.825721  ]), array([ 9.28349309, 14.69601889]), array([17.02596694, 13.22809007]), array([17.37926268, 12.9835147 ]), array([6.96615762, 7.30642023]), array([13.06560935,  8.19187329]), array([16.43158279, 13.53104909]), array([13.97206628, 16.69539802]), array([16.72924183, 13.36892186]), array([ 1.4694422 , 16.20038206]), array([17.38914512, 12.95417582]), array([13.36748769, 13.29559858]), array([16.92562293, 13.00873198]), array([13.11185111, 10.54149527]), array([ 9.62310007, 15.66393268]), array([16.851462  , 13.47185805]), array([12.43713808, 17.06147211]), array([6.53999851, 6.64106326]), array([13.46694485, 17.76899828]), array([11.45323467, 17.01587351]), array([16.78592416, 13.26448809]), array([16.85641854, 16.56426049]), array([13.02829247, 17.01856826]), array([13.84767171, 14.80713189]), array([14.51354073, 13.36012019]), array([18.83159159, 12.33665125]), array([5.37837155, 7.65655719]), array([17.25476757, 13.33150599]), array([16.94865006, 13.23831125]), array([5.75131114, 5.8636958 ]), array([16.99103621, 13.14023543]), array([ 8.48964234, 13.71083893]), array([11.42128095, 14.38370299]), array([15.74699885,  9.6569227 ]), array([13.54048994, 16.87711183]), array([6.57408924, 7.79113017]), array([16.0306207 , 18.55165654]), array([ 2.12635426, 15.36489763]), array([13.65749695, 17.10544794]), array([17.92875703, 13.25976942]), array([ 8.87798267, 16.28653995]), array([ 7.35303069, 10.519409  ]), array([ 9.71617671, 14.48555467]), array([16.79962041, 13.38133252]), array([ 8.19477966, 11.87269001]), array([ 6.5051467 , 10.88997978]), array([20.        ,  8.09930233]), array([17.07475683, 18.77482088]), array([16.44918079, 18.68388191])]
out_type=['differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net', 'differential_evolution', 'neural_net', 'neural_net', 'neural_net']
out_extras=[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
in_costs=[0.0, 0.0, -65.55643647974706, -26.070124757037277, -22.79777007900735, -62.92364486415429, -71.24254336990779, -17.720113185607122, 0.0, -70.34797416831388, -94.6271719184392, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -69.96554929575917, 0.0, 0.0, 0.0, -65.54543367490464, 0.0, -64.59374031541475, -68.7286656424971, 0.0, -50.90541402837986, -92.05871931114939, -92.04867468955125, 0.0, 0.0, 0.0, 0.0, 0.0, -58.99244251229371, 0.0, 0.0, 0.0, -3.2626866539378483, -88.45758081125325, 0.0, -107.96691878554273, 0.0, -65.49466421108667, 0.0, 0.0, -58.59722958690311, -134.67452791237736, -96.91217307283087, -31.24325432369067, -43.4386734752557, 0.0, 0.0, -178.60550122858606, 0.0, 0.0, -41.405997715521394, -57.772067903222904, -20.531512697779164, 0.0, 0.0, -51.01757866336034, -18.65139985007624, 0.0, -39.419299163580376, 0.0, 0.0, 0.0, -48.17253596486968, 0.0, -37.906236534398616, -22.10952861534431, 0.0, -88.71011000996918, -47.358947114135184, -64.85492017897117, -56.181585078282374, 0.0, -21.90381725065251, -120.00347214201602, -23.807713593193235, -72.95174206517135, 0.0, -104.10027207165184, -31.665384089382727, -44.85062113375277, -36.69079925050946, 0.0, 0.0, -29.894949882081768, -40.48908168709124, -27.90190818882867, 0.0, 0.0]
in_uncers=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
in_bads=[True, True, False, False, False, False, False, False, True, False, False, True, True, True, True, True, True, False, True, True, True, False, True, False, False, True, False, False, False, True, True, True, True, True, False, True, True, True, False, False, True, False, True, False, True, True, False, False, False, False, False, True, True, False, True, True, False, False, False, True, True, False, False, True, False, True, True, True, False, True, False, False, True, False, False, False, False, True, False, False, False, False, True, False, False, False, False, True, True, False, False, False, True, True]
in_extras=[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]
max_num_runs=inf
start_datetime='2024-07-30_16-42'
training_type='differential_evolution'
num_params=2
min_boundary=array([1., 1.])
max_boundary=array([20., 20.])
param_names=['Num Be+', 'Num O2+']
num_in_costs=94
best_cost=-178.60550122858606
best_uncer=0.0
best_params=array([16.72924183, 13.36892186])
best_index=53
best_in_extras={}
predicted_best_parameters=array([13.51973817, 14.55310495])
predicted_best_cost=-72.67660979958528
